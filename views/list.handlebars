<div class="heading-list">
  <div class="hex-swiper-1">
    <div class="circle"></div>
    <div class="swiper-wrapper">
      {{#each hexagrams}}
        <div class="swiper-slide">
          <div id="hex-icon">
            {{#eachReverse sequence}}
              <div class="hex-icon-line {{#if this}}yang{{else}}yin{{/if}}">
                <div class="hex-icon-line-left">&nbsp;</div>
                <div class="hex-icon-line-right">&nbsp;</div>
              </div>
            {{/eachReverse}}
          </div>
        </div>
      {{/each}}
    </div>
  </div>
  <div class="hex-swiper-2">
    <div class="swiper-wrapper">
      {{#each hexagrams}}
        <div class="swiper-slide">
          <div id="hex-icon">
            {{#eachReverse sequence}}
              <div class="hex-icon-line {{#if this}}yang{{else}}yin{{/if}}">
                <div class="hex-icon-line-left">&nbsp;</div>
                <div class="hex-icon-line-right">&nbsp;</div>
              </div>
            {{/eachReverse}}
          </div>
        </div>
      {{/each}}
    </div>
  </div>
</div>
<div class="hex-1">
  <div class="title-row">
    <span class="order">1</span><span class="name">Initiating</span>
  </div>
  <div class="hex-icon-compare">
    <div class="line yang" data-id="1">
      <div class="left">&nbsp;</div>
      <div class="right">&nbsp;</div>
    </div>
    <div class="line yang" data-id="1">
      <div class="left">&nbsp;</div>
      <div class="right">&nbsp;</div>
    </div>
    <div class="line yang" data-id="1">
      <div class="left">&nbsp;</div>
      <div class="right">&nbsp;</div>
    </div>
    <div class="line yang" data-id="1">
      <div class="left">&nbsp;</div>
      <div class="right">&nbsp;</div>
    </div>
    <div class="line yang" data-id="1">
      <div class="left">&nbsp;</div>
      <div class="right">&nbsp;</div>
    </div>
    <div class="line yang" data-id="1">
      <div class="left">&nbsp;</div>
      <div class="right">&nbsp;</div>
    </div>
  </div>
  <div class="info-side">
    <text class="info">What about now?</text>
  </div>
</div>
<div class="hex-2">
  <div class="title-row">
    <span class="order">1</span><span class="name">Initiating</span>
  </div>
  <div class="hex-icon-compare">
    <div class="line yang" data-id="2">
      <div class="left">&nbsp;</div>
      <div class="right">&nbsp;</div>
    </div>
    <div class="line yang" data-id="2">
      <div class="left">&nbsp;</div>
      <div class="right">&nbsp;</div>
    </div>
    <div class="line yang" data-id="2">
      <div class="left">&nbsp;</div>
      <div class="right">&nbsp;</div>
    </div>
    <div class="line yang" data-id="2">
      <div class="left">&nbsp;</div>
      <div class="right">&nbsp;</div>
    </div>
    <div class="line yang" data-id="2">
      <div class="left">&nbsp;</div>
      <div class="right">&nbsp;</div>
    </div>
    <div class="line yang" data-id="2">
      <div class="left">&nbsp;</div>
      <div class="right">&nbsp;</div>
    </div>
  </div>
  <div class="info-side">
    <text class="info">What about now?</text>
  </div>
</div>
<div class="differences">
  <div class="title">
    <text class="title">Lines from Initiating</text>
  </div>
  <div class="line-diff">
    <div class="text">
      <text class="text">Text</text>
    </div>
    <div class="commentary">
      <text class="commentary">Commentary</text>
    </div>
    <div class="text">
      <text class="text">Text</text>
    </div>
    <div class="commentary">
      <text class="commentary">Commentary</text>
    </div>
    <div class="text">
      <text class="text">Text</text>
    </div>
    <div class="commentary">
      <text class="commentary">Commentary</text>
    </div>
  </div>
  <div class="title">
    <text class="title">Lines from Responding</text>
  </div>
  <div class="line-diff">
    <div class="text">
      <text class="text">Text</text>
    </div>
    <div class="commentary">
      <text class="commentary">Commentary</text>
    </div>
    <div class="text">
      <text class="text">Text</text>
    </div>
    <div class="commentary">
      <text class="commentary">Commentary</text>
    </div>
    <div class="text">
      <text class="text">Text</text>
    </div>
    <div class="commentary">
      <text class="commentary">Commentary</text>
    </div>
  </div>
</div>

<script>
  $(document).ready(function () {
    $('body').css({ // Hack workaround, need to make a separate css file for this view
      display: 'flex'
    });

    jQuery.fn.reverse = [].reverse; // Smallest jquery plugin on earth
    var hexagrams = window.hexagrams = {{{json hexagrams}}};
    var visits = {{{json visits}}};
    var currentHexagram;
    var flip = true;

    var currentHexagrams = {
      1: {},
      2: {}
    };

    var setCurrentHexagram = function (num, index, updateTitle, updateHex, updateJudge, updateDiff) {
      var hex = currentHexagrams[num] = hexagrams[index];      
      changeSequence(num, updateTitle, updateHex, updateJudge, updateDiff);

      return hex;
    };

    var getSequence = function (num) {
      var sequence = $('.hex-' + num + ' .hex-icon-compare').children().reverse().map(function (index, element) {
        var el = $(element);
        return el.hasClass('yang') ? 1 : 0;
      }).get();

      return sequence;
    };

    var matchSequence = function (sequence) {
      var index;

      var hex = _.find(hexagrams, function (hex, idx) {
        var flag = _.isEqual(hex.sequence, sequence);

        if (flag) {
          index = idx;
        }

        return _.isEqual(hex.sequence, sequence);
      });

      return index;
    };

    var compareHexagrams = function () {
      var sequence1 = currentHexagrams['1'].sequence;
      var sequence2 = currentHexagrams['2'].sequence;

      if (sequence1 && sequence2) {
        var result = [];

        _.each(sequence1, function (val, index) {
          if (val !== sequence2[index]) {
            result.push(index);
          }
        });

        return result;
      } else {
        return [];
      }
    };

    var showLineDifferences = function (diff) {
      $('.differences').children().remove();

      if (diff.length) {
        var result = {
          '1': [],
          '2': []
        };

        _.each(diff, function (val, index) {
          result['1'].push(currentHexagrams['1'].lines[val]);
          result['2'].push(currentHexagrams['2'].lines[val]);
        });

        var titleNode1 = $('<div class="title"><text class="title"></text></div>');
        titleNode1.text('Lines from ' + currentHexagrams[1].title);
        var titleNode2 = $('<div class="title"><text class="title"></text></div>');
        titleNode2.text('Lines from ' + currentHexagrams[2].title);

        var linesDiv1 = $('<div class="line-diff"></div>');
        var linesDiv2 = $('<div class="line-diff"></div>');

        _.each(diff, function (val) {
          var line1 = $('<div class="line-diff-text"></div>');
          var lineText1 = $('<text class="text"></text>');
          var comm1 = $('<div class="line-diff-comm"><text class="comm"></text></div>');
          var commText1 = $('<text class="commentary"></text>');
          lineText1.text((val + 1) + '. ' + currentHexagrams['1'].lines[val].text);
          line1.append(lineText1);
          commText1.text(currentHexagrams['1'].lines[val].commentary);
          comm1.append(commText1);
          linesDiv1.append(line1);
          linesDiv1.append(comm1);

          var line2 = $('<div class="line-diff-text"></div>');
          var lineText2 = $('<text class="text"></text>');
          var comm2 = $('<div class="line-diff-comm"><text class="comm"></text></div>');
          var commText2 = $('<text class="commentary"></text>');
          lineText2.text((val + 1) + '. ' + currentHexagrams['2'].lines[val].text);
          line2.append(lineText2);
          commText2.text(currentHexagrams['2'].lines[val].commentary);
          comm2.append(commText2);
          linesDiv2.append(line2);
          linesDiv2.append(comm2);
        });

        $('.differences').append(titleNode1);
        $('.differences').append(linesDiv1);
        $('.differences').append(titleNode2);
        $('.differences').append(linesDiv2);
        
      } else {
        var noDiff = $('<div class="title"><text class="title"></text></div>');
        noDiff.text('Same hexagram shown');
        $('.differences').append(noDiff);
      }

      return;
    };

    var changeSequence = function (num, updateTitle, updateHex, updateJudge, updateDifference) {
      var animateTitleRow = function () {
        var animateOrder = function () {
          return $('.hex-' + num + ' span.order').velocity('transition.flipXOut', {
            duration: 200,
            complete: function () {
              return $('.hex-' + num + ' span.order').text(currentHexagrams[num].order);
            }
          }).velocity('transition.flipXIn', 300);
        };

        var animateName = function () {
          return $('.hex-' + num + ' span.name').velocity('transition.flipXOut', {
            duration: 200,
            complete: function () {
              return $('.hex-' + num + ' span.name').text(currentHexagrams[num].title);
            }
          }).velocity('transition.flipXIn', 300);
        };

        animateOrder();
        animateName();
      };

      var animateHexagram = function () {
        return $('.hex-' + num + ' .hex-icon-compare').children().reverse().each(function (index, element) {
          var el = $(element);

          if (currentHexagrams[num].sequence[index] === 0) {
            el.removeClass('yang').addClass('yin');
          } else {
            el.addClass('yang').removeClass('yin');
          }
        });
      };

      var animateInfo = function () {
        return $('.hex-' + num + ' .info-side text').text(currentHexagrams[num].judgement.text);
      };

      var animateDifference = function () {
        return showLineDifferences(compareHexagrams());
      };

      if (updateTitle) {
        animateTitleRow();
      }

      if (updateHex) {
        animateHexagram();
      }

      if (updateJudge) {
        animateInfo();
      }

      if (updateDifference) {
        animateDifference();
      }
    };

    var handleClick = function (swiper, event) {
      return swiper.slideTo(swiper.clickedIndex);
    };

    var hexSwiper1 = new Swiper ('.hex-swiper-1', {
      direction: 'horizontal',
      loop: true,
      loopedSlides: 64,
      slidesPerView: 7, // This should be done programattically to handle different screen widths
      centeredSlides: true,
      onSlideChangeEnd: function (swiper) {
        var index = swiper.activeIndex >= 64 ? swiper.activeIndex % 64 : swiper.activeIndex;
        return setCurrentHexagram(1, index, true, true, true, true);
      },
      onClick: handleClick
    });

    var hexSwiper2 = new Swiper ('.hex-swiper-2', {
      direction: 'horizontal',
      loop: true,
      loopedSlides: 64,
      slidesPerView: 7, // This should be done programattically to handle different screen widths
      centeredSlides: true,
      onSlideChangeEnd: function (swiper) {
        var index = swiper.activeIndex >= 64 ? swiper.activeIndex % 64 : swiper.activeIndex;
        return setCurrentHexagram(2, index, true, true, true, true);
      },
      onClick: handleClick
    });

    var scrollSwiperTo = function (num, index) {
      var swiper = num === 1 ? hexSwiper1 : hexSwiper2;
      swiper.slideTo(index, 400, false);
    };

    $('body').keydown(function(e){
      if ((e.keyCode || e.which) === 37) { // left arrow
        return shiftHexagrams(-1);
      } else if ((e.keyCode || e.which) === 39) { // right arrow
        return shiftHexagrams(1);
      }
    });

    $('.line').click(function () {
      var el = $(this);
      var num = el.data('id');

      if (el.hasClass('yang')) {
        el.removeClass('yang').addClass('yin');
      } else {
        el.removeClass('yin').addClass('yang');
      }

      var index = matchSequence(getSequence(num));

      setCurrentHexagram(num, index, true, false, true, true);
      scrollSwiperTo(num, index);
    });
  });
</script>