<div class="container-fluid">
  <div class="row">
    <div class="col-sm-4 col-sm-offset-4" id="main-container">
      <div class="heading-list">
        <div class="hex-swiper-1">
          <div class="circle"></div>
          <div class="swiper-wrapper">
            {{#each hexagrams}}
              <div class="swiper-slide">
                <div id="hex-icon">
                  {{#eachReverse sequence}}
                    <div class="hex-icon-line {{#if this}}yang{{else}}yin{{/if}}">
                      <div class="hex-icon-line-left">&nbsp;</div>
                      <div class="hex-icon-line-right">&nbsp;</div>
                    </div>
                  {{/eachReverse}}
                </div>
              </div>
            {{/each}}
          </div>
        </div>
        <div class="hex-swiper-2">
          <div class="swiper-wrapper">
            {{#each hexagrams}}
              <div class="swiper-slide">
                <div id="hex-icon">
                  {{#eachReverse sequence}}
                    <div class="hex-icon-line {{#if this}}yang{{else}}yin{{/if}}">
                      <div class="hex-icon-line-left">&nbsp;</div>
                      <div class="hex-icon-line-right">&nbsp;</div>
                    </div>
                  {{/eachReverse}}
                </div>
              </div>
            {{/each}}
          </div>
        </div>
      </div>
      <div class="comparison-body">
        <div class="hex-1">
          <div class="title-row">
            <span class="order">1</span><span class="name">Initiating</span>
          </div>
          <div class="hex-icon-compare">
            <div class="line yang" data-id="1">
              <div class="left">&nbsp;</div>
              <div class="right">&nbsp;</div>
            </div>
            <div class="line yang" data-id="1">
              <div class="left">&nbsp;</div>
              <div class="right">&nbsp;</div>
            </div>
            <div class="line yang" data-id="1">
              <div class="left">&nbsp;</div>
              <div class="right">&nbsp;</div>
            </div>
            <div class="line yang" data-id="1">
              <div class="left">&nbsp;</div>
              <div class="right">&nbsp;</div>
            </div>
            <div class="line yang" data-id="1">
              <div class="left">&nbsp;</div>
              <div class="right">&nbsp;</div>
            </div>
            <div class="line yang" data-id="1">
              <div class="left">&nbsp;</div>
              <div class="right">&nbsp;</div>
            </div>
          </div>
          <div class="info-side">
            <text class="info">What about now?</text>
          </div>
        </div>
        <div class="hex-2">
          <div class="title-row">
            <span class="order">1</span><span class="name">Initiating</span>
          </div>
          <div class="hex-icon-compare">
            <div class="line yang" data-id="2">
              <div class="left">&nbsp;</div>
              <div class="right">&nbsp;</div>
            </div>
            <div class="line yang" data-id="2">
              <div class="left">&nbsp;</div>
              <div class="right">&nbsp;</div>
            </div>
            <div class="line yang" data-id="2">
              <div class="left">&nbsp;</div>
              <div class="right">&nbsp;</div>
            </div>
            <div class="line yang" data-id="2">
              <div class="left">&nbsp;</div>
              <div class="right">&nbsp;</div>
            </div>
            <div class="line yang" data-id="2">
              <div class="left">&nbsp;</div>
              <div class="right">&nbsp;</div>
            </div>
            <div class="line yang" data-id="2">
              <div class="left">&nbsp;</div>
              <div class="right">&nbsp;</div>
            </div>
          </div>
          <div class="info-side">
            <text class="info">What about now?</text>
          </div>
        </div>
      </div>
    </div>
  </div>
  {{!-- <div id="arrows">
    <span id="left-arrow" class="glyphicon glyphicon-chevron-left glyph-arrows" aria-hidden="true"></span>
    <span id="right-arrow" class="glyphicon glyphicon-chevron-right glyph-arrows" aria-hidden="true"></span>
    <span id="shuffle" class="glyphicon glyphicon-random glyph-arrows pull-right glyph-arrows" aria-hidden="true"></span>
    <span id="cast" class="glyphicon glyphicon-eye-open pull-right glyph-arrows" aria-hidden="true"></span>
    <span id="help" class="glyphicon glyphicon-question-sign glyph-arrows pull-right glyph-arrows" aria-hidden="true"></span>
  </div> --}}
</div>
<script>
  $(document).ready(function () {
    jQuery.fn.reverse = [].reverse; // Smallest jquery plugin on earth
    var hexagrams = window.hexagrams = {{{json hexagrams}}};
    var visits = {{{json visits}}};
    var currentHexagram;
    var flip = true;

    var currentHexagrams = {
      1: {},
      2: {}
    };

    var setCurrentHexagram = function (num, index, updateTitle, updateHex, updateJudge) {
      var hex = currentHexagrams[num] = hexagrams[index];      
      changeSequence(num, updateTitle, updateHex, updateJudge);

      return hex;
    };

    var getSequence = function (num) {
      var sequence = $('.hex-' + num + ' .hex-icon-compare').children().reverse().map(function (index, element) {
        var el = $(element);
        return el.hasClass('yang') ? 1 : 0;
      }).get();

      return sequence;
    };

    var matchSequence = function (sequence) {
      var index;

      var hex = _.find(hexagrams, function (hex, idx) {
        var flag = _.isEqual(hex.sequence, sequence);

        if (flag) {
          index = idx;
        }

        return _.isEqual(hex.sequence, sequence);
      });

      return index;
    };

    var changeSequence = function (num, updateTitle, updateHex, updateJudge) {
      var animateTitleRow = function () {
        var animateOrder = function () {
          return $('.hex-' + num + ' span.order').velocity('transition.flipXOut', {
            duration: 200,
            complete: function () {
              return $('.hex-' + num + ' span.order').text(currentHexagrams[num].order);
            }
          }).velocity('transition.flipXIn', 300);
        };

        var animateName = function () {
          return $('.hex-' + num + ' span.name').velocity('transition.flipXOut', {
            duration: 200,
            complete: function () {
              return $('.hex-' + num + ' span.name').text(currentHexagrams[num].title);
            }
          }).velocity('transition.flipXIn', 300);
        };

        animateOrder();
        animateName();
      };

      var animateHexagram = function () {
        return $('.hex-' + num + ' .hex-icon-compare').children().reverse().each(function (index, element) {
          var el = $(element);

          if (currentHexagrams[num].sequence[index] === 0) {
            el.removeClass('yang').addClass('yin');
          } else {
            el.addClass('yang').removeClass('yin');
          }
        });
      };

      var animateInfo = function () {
        return $('.hex-' + num + ' .info-side text').text(currentHexagrams[num].judgement.text);
      };

      if (updateTitle) {
        animateTitleRow();
      }

      if (updateHex) {
        animateHexagram();
      }

      if (updateJudge) {
        animateInfo();
      }
    };

    var hexSwiper1 = new Swiper ('.hex-swiper-1', {
      direction: 'horizontal',
      loop: true,
      loopedSlides: 64,
      slidesPerView: 7, // This should be done programattically to handle different screen widths
      centeredSlides: true,
      onSlideChangeEnd: function (swiper) {
        var index = swiper.activeIndex >= 64 ? swiper.activeIndex % 64 : swiper.activeIndex;
        return setCurrentHexagram(1, index, true, true, true);
      }
    });

    var hexSwiper2 = new Swiper ('.hex-swiper-2', {
      direction: 'horizontal',
      loop: true,
      loopedSlides: 64,
      slidesPerView: 7, // This should be done programattically to handle different screen widths
      centeredSlides: true,
      onSlideChangeEnd: function (swiper) {
        var index = swiper.activeIndex >= 64 ? swiper.activeIndex % 64 : swiper.activeIndex;
        return setCurrentHexagram(2, index, true, true, true);
      }
    });

    var scrollSwiperTo = function (num, index) {
      var swiper = num === 1 ? hexSwiper1 : hexSwiper2;
      swiper.slideTo(index, 400);
    };

    $('body').keydown(function(e){
      if ((e.keyCode || e.which) === 37) { // left arrow
        return shiftHexagrams(-1);
      } else if ((e.keyCode || e.which) === 39) { // right arrow
        return shiftHexagrams(1);
      }
    });

    $('.line').click(function () {
      var el = $(this);
      var num = el.data('id');

      if (el.hasClass('yang')) {
        el.removeClass('yang').addClass('yin');
      } else {
        el.removeClass('yin').addClass('yang');
      }

      var index = matchSequence(getSequence(num));

      setCurrentHexagram(num, index, false, false, false);
      scrollSwiperTo(num, index);
    });
  });
</script>